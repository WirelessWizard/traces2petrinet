digraph finite_state_machine {
 rankdir=LR;
size ="8,5"
 node [shape = box, width = 2];
AudioOut_2_492[label= "AudioOut_2_492\n 42"];
tel_aac_decoder_5581[label= "tel_aac_decoder_5581\n 84"];
dequeueBuffer[label= "dequeueBuffer\n 60"];
sdcard_206[label= "sdcard_206\n 2"];
irq_29_intel_ss_100[label= "irq_29_intel_ss_100\n "];
postVideoEvent_l[label= "postVideoEvent_l\n 63"];
queueBuffer[label= "queueBuffer\n 60"];
surfaceflinger_538[label= "surfaceflinger_538\n 119"];
OMXCallbackDisp_5579[label= "OMXCallbackDisp_5579\n 121"];
Video[label= "Video\n 63"];
OMXCallbackDisp_5582[label= "OMXCallbackDisp_5582\n 44"];
AudioTrack_5583[label= "AudioTrack_5583\n 42"];
sdcard_205[label= "sdcard_205\n 2"];
postFramebuffer[label= "postFramebuffer\n 59"];
acquireBuffer[label= "acquireBuffer\n 60"];
surfaceflinger_161[label= "surfaceflinger_161\n 117"];
ALooper_5580[label= "ALooper_5580\n 63"];
render[label= "render\n 60"];
onVideoEvent[label= "onVideoEvent\n 63"];
releaseBuffer[label= "releaseBuffer\n 59"];
waitForever[label= "waitForever\n 60"];
OMXCallbackDisp_5582 -> tel_aac_decoder_5581 [ label = " " ];
OMXCallbackDisp_5579 -> ALooper_5580 [ label = " " ];
AudioTrack_5583 -> tel_aac_decoder_5581 [ label = " " ];
irq_29_intel_ss_100 -> AudioOut_2_492 [ label = " " ];
ALooper_5580 -> sdcard_206 [ label = " " ];
surfaceflinger_161 -> surfaceflinger_538 [ label = " " ];
AudioOut_2_492 -> AudioTrack_5583 [ label = " " ];
ALooper_5580 -> sdcard_205 [ label = " " ];
sdcard_206 -> ALooper_5580 [ label = " " ];
sdcard_205 -> ALooper_5580 [ label = " " ];
tel_aac_decoder_5581 -> OMXCallbackDisp_5582 [ label = " " ];
Video -> render [ label = " " ];
postFramebuffer -> surfaceflinger_538 [ label = " " ];
surfaceflinger_538 -> onVideoEvent [ label = " " ];
acquireBuffer -> releaseBuffer [ label = " " ];
postVideoEvent_l -> OMXCallbackDisp_5579 [ label = " " ];
surfaceflinger_161 -> acquireBuffer [ label = " " ];
releaseBuffer -> postFramebuffer [ label = " " ];
ALooper_5580 -> surfaceflinger_161 [ label = " " ];
dequeueBuffer -> waitForever [ label = " " ];
render -> queueBuffer [ label = " " ];
onVideoEvent -> Video [ label = " " ];
queueBuffer -> dequeueBuffer [ label = " " ];
waitForever -> postVideoEvent_l [ label = " " ];
postVideoEvent_l -> onVideoEvent [ label = " " ];
Video -> postVideoEvent_l [ label = " " ];
acquireBuffer -> postFramebuffer [ label = " " ];
}
